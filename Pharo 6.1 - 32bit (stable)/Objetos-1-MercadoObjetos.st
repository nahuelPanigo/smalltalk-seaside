Object subclass: #FormaDeEnvios	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!FormaDeEnvios commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!FormaDeEnvios methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2018 13:47'!costoDelEnvio:pedido^self subclassResponsibility .! !FormaDeEnvios subclass: #ExpresADomicilio	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!ExpresADomicilio commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!ExpresADomicilio methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2018 14:01'!costoDelEnvio:unPedido^MapaEnvio devolverDistanciaEntre:unPedido direccionCliente   y:unPedido direccionVendedor .! !Object subclass: #FormasDePago	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!FormasDePago commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!FormasDePago methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2018 13:29'!precioFinal:precioTotal.^self subclassResponsibility .! !FormasDePago subclass: #A6Cuotas	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!A6Cuotas commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!A6Cuotas methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2018 13:30'!precioFinal: precioTotal^(precioTotal * 0.20) +precioTotal .! !FormasDePago subclass: #AlContado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!AlContado commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!AlContado methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2018 13:31'!precioFinal: precioTotal^precioTotal .! !Object subclass: #MapaEnvio	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!MapaEnvio commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!MapaEnvio methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2018 14:04'!devolverDistanciaEntre:direccion1 y:direccion2(direccion1-direccion2> 0) ifTrue: [^100] ifFalse:[^100].! !Object subclass: #MercadoPagos	instanceVariableNames: 'usuarios'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!MercadoPagos commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!MercadoPagos methodsFor: 'initialization' stamp: 'Anonymous 11/18/2018 13:03'!initializeusuarios := OrderedCollection new.! !Object subclass: #Pedido	instanceVariableNames: 'producto cliente cantidad formaDePago envio'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!Pedido commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:12'!producto^producto .! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:11'!producto: unProductoproducto := unProducto.! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:14'!formaDePago^formaDePago .! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:15'!cliente: unClientecliente := unCliente.! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:15'!cliente^cliente.! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:14'!envio^envio.! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:14'!envio: unEnvioenvio := unEnvio ! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:13'!cantidad: unaCantidadcantidad := unaCantidad.! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:55'!direccionCliente^cliente direccion.! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:13'!cantidad ^cantidad.! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:14'!formaDePago: unaFormaformaDePago := unaForma .! !!Pedido methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:54'!direccionVendedor^producto direccionVendedor .! !Object subclass: #Producto	instanceVariableNames: 'nombre descripcion precio stock vendedor pedidos'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!Producto commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:10'!precio^precio.! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:08'!nombre ^nombre.! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:10'!precio: unPrecioprecio:= unPrecio .! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:17'!initializepedidos := OrderedCollection new.! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:10'!vendedor: unVendedorvendedor := unVendedor .! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:09'!descripcion ^descripcion ! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:10'!vendedor^vendedor.! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:08'!nombre:unNombrenombre := unNombre.! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:09'!descripcion: unaDescripciondescripcion := unaDescripcion .! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:09'!stock^stock.! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:09'!stock: unaCantidadstock := unaCantidad! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:21'!disponibilidad:unaCantidad^(stock - unaCantidad >0)! !!Producto methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:53'!direccionVendedor^vendedor direccion .! !FormaDeEnvios subclass: #RetirarEnComercio	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!RetirarEnComercio commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!RetirarEnComercio methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2018 13:48'!costoDelEnvio:unPedido^0.! !FormaDeEnvios subclass: #RetirarEnCorreo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!RetirarEnCorreo commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!RetirarEnCorreo methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/18/2018 13:48'!costoDelEnvio:unPedido! !Object subclass: #UsuarioVC	instanceVariableNames: 'nombre direccion productos'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos-1-MercadoObjetos'!!UsuarioVC commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!UsuarioVC methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:05'!nombre^nombre! !!UsuarioVC methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:05'!direccion: unaDirecciondireccion:=  unaDireccion! !!UsuarioVC methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:05'!nombre: unNombrenombre := unNombre.! !!UsuarioVC methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:07'!initialize productos := OrderedCollection new.! !!UsuarioVC methodsFor: 'accessing' stamp: 'Anonymous 11/18/2018 13:06'!dieccion ^direccion! !