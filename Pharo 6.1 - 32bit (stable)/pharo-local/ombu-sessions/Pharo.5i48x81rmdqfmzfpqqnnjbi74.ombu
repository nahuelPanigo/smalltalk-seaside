OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T13:58:17.825304-03:00' ],		#prior : OmReference [ 'Pharo.bhyfw0bgzlez8hjp55r6261zj', '26' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Objetos-1-AlquilerDePropiedes,		#affectedPackageName : #Objetos-1-AlquilerDePropiedes	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T13:58:18.269304-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Inmobiliaria\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Inmobiliaria,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Inmobiliaria class\r\tinstanceVariableNames: \'\''				},				#name : #'Inmobiliaria class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Inmobiliaria,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T13:58:27.872304-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Inmobiliaria\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Inmobiliaria,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Inmobiliaria class\r\tinstanceVariableNames: \'\''				},				#name : #'Inmobiliaria class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Inmobiliaria,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T13:59:57.152304-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:00:07.514304-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Propiedades\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Propiedades,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Propiedades class\r\tinstanceVariableNames: \'\''				},				#name : #'Propiedades class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Propiedades,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:00:43.878304-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Propiedades\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Propiedades,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Propiedades class\r\tinstanceVariableNames: \'\''				},				#name : #'Propiedades class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Propiedades,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Propiedades\r\tinstanceVariableNames: \'reservas nombre precioDia direccion\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Propiedades,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #reservas,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #nombre,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #precioDia,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #direccion,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Propiedades class\r\tinstanceVariableNames: \'\''				},				#name : #'Propiedades class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Propiedades,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:00:54.586304-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:00:58.552304-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Propiedades\r\tinstanceVariableNames: \'reservas nombre precioDia direccion\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Propiedades,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #reservas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #nombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #precioDia,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #direccion,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Propiedades class\r\tinstanceVariableNames: \'\''				},				#name : #'Propiedades class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Propiedades,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tdireccion:\t\t<Object>\r\tnombre:\t\t<Object>\r\tprecioDia:\t\t<Object>\r\treservas:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tdireccion:\t\t<Object>\r\tnombre:\t\t<Object>\r\tprecioDia:\t\t<Object>\r\treservas:\t\t<Object>\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:03:13.164304-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\rnombre := unNombre .',			#stamp : 'Anonymous 11/1/2018 14:03',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:03:13.378304-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\rnombre := unNombre .',			#stamp : 'Anonymous 11/1/2018 14:03',			#package : #Objetos-1-AlquilerDePropiedes		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #accessing,			#sourceCode : 'nombre: unNombre\rnombre := unNombre .',			#stamp : 'Anonymous 11/1/2018 14:03',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:03:27.964304-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #nombre,			#protocol : #accessing,			#sourceCode : 'nombre\r^nombre.',			#stamp : 'Anonymous 11/1/2018 14:03',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:03:59.402304-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Propiedades\r\tinstanceVariableNames: \'reservas nombre precioDia direccion\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Propiedades,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #reservas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #nombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #precioDia,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #direccion,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Propiedades class\r\tinstanceVariableNames: \'\''				},				#name : #'Propiedades class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Propiedades,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tdireccion:\t\t<Object>\r\tnombre:\t\t<Object>\r\tprecioDia:\t\t<Object>\r\treservas:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Propiedades\r\tinstanceVariableNames: \'reservas nombre precioDia direccion descripcion\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Propiedades,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #reservas,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #nombre,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #precioDia,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #direccion,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #descripcion,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Propiedades class\r\tinstanceVariableNames: \'\''				},				#name : #'Propiedades class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Propiedades,					#isMetaSide : false				},				#parent : @29,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tdireccion:\t\t<Object>\r\tnombre:\t\t<Object>\r\tprecioDia:\t\t<Object>\r\treservas:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:04:31.283304-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'descripcion:',			#protocol : #accessing,			#sourceCode : 'descripcion: unaDescripcion\rdescripcion := unaDescripcion .',			#stamp : 'Anonymous 11/1/2018 14:04',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:04:40.739304-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #descripcion,			#protocol : #accessing,			#sourceCode : 'descripcion\r^descripcion ',			#stamp : 'Anonymous 11/1/2018 14:04',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:05:28.926304-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'precioDia:',			#protocol : #accessing,			#sourceCode : 'precioDia: unPrecioDia\rprecioDia := unPrecioDia .',			#stamp : 'Anonymous 11/1/2018 14:05',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:05:39.232304-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #precioDia,			#protocol : #accessing,			#sourceCode : 'precioDia\r^precioDia .',			#stamp : 'Anonymous 11/1/2018 14:05',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:06:21.532304-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'direccion:',			#protocol : #accessing,			#sourceCode : 'direccion: unaDireccion\rdireccion:= unaDireccion .',			#stamp : 'Anonymous 11/1/2018 14:06',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:06:29.451304-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #direccion,			#protocol : #accessing,			#sourceCode : 'direccion\r^direccion.',			#stamp : 'Anonymous 11/1/2018 14:06',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:07:35.302304-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #initialize,			#protocol : #accessing,			#sourceCode : 'initialize\rreservas := OrderedCollection new.',			#stamp : 'Anonymous 11/1/2018 14:07',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:19:36.387304-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'hacerReserva:yConFin:yElUsuario:',			#protocol : #accessing,			#sourceCode : 'hacerReserva:fechaDeInicio yConFin:fechaDeDestino yElUsuario:usuario\rreservas detect: [:reserva|reserva reservado = true ]  ifFound:[^false]  ifNone:[self agregarReserva] .\r ',			#stamp : 'Anonymous 11/1/2018 14:19',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T14:52:17.037304-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'fechaInicio fechaEgreso Propietario Propiedad\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaInicio,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaEgreso,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #Propietario,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #Propiedad,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:02:40.860304-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'unaReservaDesde:hasta:deLaPropiedad:yDelUsuario:',			#protocol : #'as yet unclassified',			#sourceCode : 'unaReservaDesde:Fecha1 hasta:fecha2 deLaPropiedad:unaPropiedad yDelUsuario:usuario.\r^self new .',			#stamp : 'Anonymous 11/1/2018 15:02',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:08:53.683304-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'fechaInicio:',			#protocol : #'as yet unclassified',			#sourceCode : 'fechaInicio:fecha\rfechaInicio := fecha.',			#stamp : 'Anonymous 11/1/2018 15:08',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:08:53.692304-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'fechaInicio:',			#protocol : #'as yet unclassified',			#sourceCode : 'fechaInicio:fecha\rfechaInicio := fecha.',			#stamp : 'Anonymous 11/1/2018 15:08',			#package : #Objetos-1-AlquilerDePropiedes		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'fechaInicio:',			#protocol : #accessing,			#sourceCode : 'fechaInicio:fecha\rfechaInicio := fecha.',			#stamp : 'Anonymous 11/1/2018 15:08',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:09:15.825304-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'fechaEgreso:',			#protocol : #accessing,			#sourceCode : 'fechaEgreso:fecha\rfechaEgreso  := fecha.',			#stamp : 'Anonymous 11/1/2018 15:09',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:11:02.597304-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #fechaEgreso,			#protocol : #accessing,			#sourceCode : 'fechaEgreso\r^fechaEgreso .',			#stamp : 'Anonymous 11/1/2018 15:11',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:11:24.478304-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #fechaInicio,			#protocol : #accessing,			#sourceCode : 'fechaInicio\r^fechaInicio .',			#stamp : 'Anonymous 11/1/2018 15:11',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:11:55.421304-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'propiedad:',			#protocol : #accessing,			#sourceCode : 'propiedad: unaPropiedad',			#stamp : 'Anonymous 11/1/2018 15:11',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:12:40.502304-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'fechaInicio fechaEgreso Propietario Propiedad\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaInicio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaEgreso,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #Propietario,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #Propiedad,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'fechaInicio fechaEgreso propietario propiedad\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaInicio,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaEgreso,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #propietario,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #propiedad,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @29,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:12:57.136304-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'propiedad:',			#protocol : #accessing,			#sourceCode : 'propiedad: unaPropiedad',			#stamp : 'Anonymous 11/1/2018 15:11',			#package : #Objetos-1-AlquilerDePropiedes		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'propiedad:',			#protocol : #accessing,			#sourceCode : 'propiedad: unaPropiedad\rpropiedad := unaPropiedad .',			#stamp : 'Anonymous 11/1/2018 15:12',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:13:08.598304-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #propiedad,			#protocol : #accessing,			#sourceCode : 'propiedad\r^propiedad.',			#stamp : 'Anonymous 11/1/2018 15:13',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:14:09.857304-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'fechaInicio fechaEgreso propietario propiedad\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaInicio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaEgreso,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #propietario,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #propiedad,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'fechaInicio fechaEgreso usuario propiedad\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaInicio,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaEgreso,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #usuario,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #propiedad,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @29,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:14:47.152304-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'usuario:',			#protocol : #accessing,			#sourceCode : 'usuario: unUsuario\rusuario := unUsuario .',			#stamp : 'Anonymous 11/1/2018 15:14',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-01T15:15:01.336304-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #usuario,			#protocol : #accessing,			#sourceCode : 'usuario\r^usuario .',			#stamp : 'Anonymous 11/1/2018 15:15',			#package : #Objetos-1-AlquilerDePropiedes		}	}}