OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:18:18.94206-03:00' ],		#prior : OmReference [ 'Pharo.b2akefhwpkpo0zsjtcsxiqv2b', '74' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Objetos1-Correo,		#affectedPackageName : #Objetos1-Correo	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:18:19.13606-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ClienteDeCorreo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #ClienteDeCorreo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ClienteDeCorreo class\r\tinstanceVariableNames: \'\''				},				#name : #'ClienteDeCorreo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ClienteDeCorreo,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:18:23.72606-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ClienteDeCorreo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #ClienteDeCorreo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ClienteDeCorreo class\r\tinstanceVariableNames: \'\''				},				#name : #'ClienteDeCorreo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ClienteDeCorreo,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:18:31.03406-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Carpeta\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Carpeta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Carpeta class\r\tinstanceVariableNames: \'\''				},				#name : #'Carpeta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Carpeta,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:18:39.87906-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Archivo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Archivo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Archivo class\r\tinstanceVariableNames: \'\''				},				#name : #'Archivo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Archivo,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:18:48.12006-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Email\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Email,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Email class\r\tinstanceVariableNames: \'\''				},				#name : #'Email class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Email,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:18:53.65006-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Email\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Email,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Email class\r\tinstanceVariableNames: \'\''				},				#name : #'Email class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Email,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:18:57.47406-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Carpeta\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Carpeta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Carpeta class\r\tinstanceVariableNames: \'\''				},				#name : #'Carpeta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Carpeta,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:19:01.43606-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Archivo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Archivo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Archivo class\r\tinstanceVariableNames: \'\''				},				#name : #'Archivo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Archivo,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:19:27.71706-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Archivo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Archivo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Archivo class\r\tinstanceVariableNames: \'\''				},				#name : #'Archivo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Archivo,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Archivo\r\tinstanceVariableNames: \'nombre tamanio\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Archivo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Archivo,						#isMetaSide : false					},					#name : #nombre,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Archivo,						#isMetaSide : false					},					#name : #tamanio,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Archivo class\r\tinstanceVariableNames: \'\''				},				#name : #'Archivo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Archivo,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:19:55.05306-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Archivo,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\r\rnombre := unNombre .',			#stamp : 'Anonymous 10/12/2018 10:19',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:19:55.28106-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Archivo,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\r\rnombre := unNombre .',			#stamp : 'Anonymous 10/12/2018 10:19',			#package : #Objetos1-Correo		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Archivo,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #accessing,			#sourceCode : 'nombre: unNombre\r\rnombre := unNombre .',			#stamp : 'Anonymous 10/12/2018 10:19',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:20:04.84406-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Archivo,				#isMetaSide : false			},			#name : #nombre,			#protocol : #accessing,			#sourceCode : 'nombre \r^nombre',			#stamp : 'Anonymous 10/12/2018 10:20',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:20:20.91106-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Archivo,				#isMetaSide : false			},			#name : #'tamanio:',			#protocol : #accessing,			#sourceCode : 'tamanio: unTamanio\r\rtamanio:= unTamanio .',			#stamp : 'Anonymous 10/12/2018 10:20',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:20:29.56306-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Archivo,				#isMetaSide : false			},			#name : #tamanio,			#protocol : #accessing,			#sourceCode : 'tamanio\r\r^tamanio.',			#stamp : 'Anonymous 10/12/2018 10:20',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:22:11.59006-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Email\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Email,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Email class\r\tinstanceVariableNames: \'\''				},				#name : #'Email class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Email,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Email\r\tinstanceVariableNames: \'archivos titulo cuerpo\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Email,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Email,						#isMetaSide : false					},					#name : #archivos,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Email,						#isMetaSide : false					},					#name : #titulo,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Email,						#isMetaSide : false					},					#name : #cuerpo,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Email class\r\tinstanceVariableNames: \'\''				},				#name : #'Email class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Email,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:22:31.69106-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Email,				#isMetaSide : false			},			#name : #'titulo:',			#protocol : #'as yet unclassified',			#sourceCode : 'titulo: unTitulo\r\rtitulo:= unTitulo .',			#stamp : 'Anonymous 10/12/2018 10:22',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:22:31.90806-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Email,				#isMetaSide : false			},			#name : #'titulo:',			#protocol : #'as yet unclassified',			#sourceCode : 'titulo: unTitulo\r\rtitulo:= unTitulo .',			#stamp : 'Anonymous 10/12/2018 10:22',			#package : #Objetos1-Correo		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Email,				#isMetaSide : false			},			#name : #'titulo:',			#protocol : #accessing,			#sourceCode : 'titulo: unTitulo\r\rtitulo:= unTitulo .',			#stamp : 'Anonymous 10/12/2018 10:22',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:22:42.18506-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Email,				#isMetaSide : false			},			#name : #titulo,			#protocol : #accessing,			#sourceCode : 'titulo \r\r^titulo.',			#stamp : 'Anonymous 10/12/2018 10:22',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:23:03.39906-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Email,				#isMetaSide : false			},			#name : #'cuerpo:',			#protocol : #accessing,			#sourceCode : 'cuerpo: unCuerpo\rcuerpo:= unCuerpo ',			#stamp : 'Anonymous 10/12/2018 10:23',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:23:11.76206-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Email,				#isMetaSide : false			},			#name : #cuerpo,			#protocol : #accessing,			#sourceCode : 'cuerpo\r^ cuerpo',			#stamp : 'Anonymous 10/12/2018 10:23',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:24:25.86506-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Email,				#isMetaSide : false			},			#name : #'adjuntos:',			#protocol : #accessing,			#sourceCode : 'adjuntos: adjuntos\rarchivos := adjuntos. ',			#stamp : 'Anonymous 10/12/2018 10:24',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:29:21.30706-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Archivo,				#isMetaSide : false			},			#name : #'tamanio:',			#protocol : #accessing,			#sourceCode : 'tamanio: unTamanio\r\rtamanio:= unTamanio .',			#stamp : 'Anonymous 10/12/2018 10:20',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:29:30.60206-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Archivo\r\tinstanceVariableNames: \'nombre tamanio\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Archivo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Archivo,						#isMetaSide : false					},					#name : #nombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Archivo,						#isMetaSide : false					},					#name : #tamanio,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Archivo class\r\tinstanceVariableNames: \'\''				},				#name : #'Archivo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Archivo,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Archivo\r\tinstanceVariableNames: \'nombre\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Archivo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Archivo,						#isMetaSide : false					},					#name : #nombre,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Archivo class\r\tinstanceVariableNames: \'\''				},				#name : #'Archivo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Archivo,					#isMetaSide : false				},				#parent : @25,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:31:07.66206-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Archivo,				#isMetaSide : false			},			#name : #tamanio,			#protocol : #accessing,			#sourceCode : 'tamanio\r\r^tamanio.',			#stamp : 'Anonymous 10/12/2018 10:20',			#package : #Objetos1-Correo		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Archivo,				#isMetaSide : false			},			#name : #tamanio,			#protocol : #accessing,			#sourceCode : 'tamanio\r\r^(self nombre) size.',			#stamp : 'Anonymous 10/12/2018 10:31',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:34:18.42006-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Email,				#isMetaSide : false			},			#name : #tamanio,			#protocol : #accessing,			#sourceCode : 'tamanio\r|suma|\rsuma := archivos sum:[:archivo|archivo tamanio].\r^(((self titulo)size) + ((self cuerpo )size) + suma).',			#stamp : 'Anonymous 10/12/2018 10:34',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:38:47.71306-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Email,				#isMetaSide : false			},			#name : #initialize,			#protocol : #accessing,			#sourceCode : 'initialize \rarchivos := OrderedCollection new.',			#stamp : 'Anonymous 10/12/2018 10:38',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:41:22.12506-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Email class',				#isMetaSide : true			},			#name : #'elTitulo:conCuerpo:yConArchivos:',			#protocol : #'as yet unclassified',			#sourceCode : 'elTitulo: unTitulo conCuerpo:unCuerpo yConArchivos:adjuntos\r\r^self new titulo:unTitulo ;cuerpo:unCuerpo ;adjuntos: adjuntos.',			#stamp : 'Anonymous 10/12/2018 10:41',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:46:00.06106-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ClienteDeCorreo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #ClienteDeCorreo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ClienteDeCorreo class\r\tinstanceVariableNames: \'\''				},				#name : #'ClienteDeCorreo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ClienteDeCorreo,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ClienteDeCorreo\r\tinstanceVariableNames: \'carpetas\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #ClienteDeCorreo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ClienteDeCorreo,						#isMetaSide : false					},					#name : #carpetas,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ClienteDeCorreo class\r\tinstanceVariableNames: \'\''				},				#name : #'ClienteDeCorreo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ClienteDeCorreo,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:55:24.49006-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ClienteDeCorreo\r\tinstanceVariableNames: \'carpetas\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #ClienteDeCorreo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ClienteDeCorreo,						#isMetaSide : false					},					#name : #carpetas,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ClienteDeCorreo class\r\tinstanceVariableNames: \'\''				},				#name : #'ClienteDeCorreo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ClienteDeCorreo,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ClienteDeCorreo\r\tinstanceVariableNames: \'carpetas inbox\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #ClienteDeCorreo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ClienteDeCorreo,						#isMetaSide : false					},					#name : #carpetas,					#parent : @23				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ClienteDeCorreo,						#isMetaSide : false					},					#name : #inbox,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ClienteDeCorreo class\r\tinstanceVariableNames: \'\''				},				#name : #'ClienteDeCorreo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ClienteDeCorreo,					#isMetaSide : false				},				#parent : @23,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:56:05.77606-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClienteDeCorreo,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \r\rcarpetas := OrderedCollection new.',			#stamp : 'Anonymous 10/12/2018 10:56',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:56:06.00706-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClienteDeCorreo,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \r\rcarpetas := OrderedCollection new.',			#stamp : 'Anonymous 10/12/2018 10:56',			#package : #Objetos1-Correo		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClienteDeCorreo,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \r\rcarpetas := OrderedCollection new.',			#stamp : 'Anonymous 10/12/2018 10:56',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:57:51.71106-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Carpeta\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Carpeta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Carpeta class\r\tinstanceVariableNames: \'\''				},				#name : #'Carpeta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Carpeta,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Carpeta\r\tinstanceVariableNames: \'emails nombre\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-Correo\''			},			#name : #Carpeta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Carpeta,						#isMetaSide : false					},					#name : #emails,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Carpeta,						#isMetaSide : false					},					#name : #nombre,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Carpeta class\r\tinstanceVariableNames: \'\''				},				#name : #'Carpeta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Carpeta,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-Correo,			#package : #Objetos1-Correo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:58:15.68606-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\remails := OrderedCollection new.',			#stamp : 'Anonymous 10/12/2018 10:58',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:58:16.11406-03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\remails := OrderedCollection new.',			#stamp : 'Anonymous 10/12/2018 10:58',			#package : #Objetos1-Correo		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\remails := OrderedCollection new.',			#stamp : 'Anonymous 10/12/2018 10:58',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:58:35.92006-03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #initialization,			#sourceCode : 'nombre: unNombre\rnombre:= unNombre.',			#stamp : 'Anonymous 10/12/2018 10:58',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:59:43.03006-03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #'agregarEmail:',			#protocol : #initialization,			#sourceCode : 'agregarEmail: unEmail\r\remails add: unEmail .',			#stamp : 'Anonymous 10/12/2018 10:59',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T10:59:52.94206-03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #nombre,			#protocol : #initialization,			#sourceCode : 'nombre\r^nombre.',			#stamp : 'Anonymous 10/12/2018 10:59',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T11:10:00.79706-03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #'eliminarEmail:',			#protocol : #initialization,			#sourceCode : 'eliminarEmail: unEmail\r\remails remove: unEmail.',			#stamp : 'Anonymous 10/12/2018 11:10',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T11:14:28.15406-03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClienteDeCorreo,				#isMetaSide : false			},			#name : #'mover:DeLaCarpeta:ALaCarpeta:',			#protocol : #initialization,			#sourceCode : 'mover:email DeLaCarpeta: carpetaOrigen ALaCarpeta: carpetaDestino.',			#stamp : 'Anonymous 10/12/2018 11:14',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T11:26:11.35806-03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #'obtenerEmail:',			#protocol : #initialization,			#sourceCode : 'obtenerEmail: unEmail\r\remails ',			#stamp : 'Anonymous 10/12/2018 11:26',			#package : #Objetos1-Correo		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-12T11:26:23.79006-03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #'eliminarEmail:',			#protocol : #initialization,			#sourceCode : 'eliminarEmail: unEmail\r\remails remove: unEmail.',			#stamp : 'Anonymous 10/12/2018 11:10',			#package : #Objetos1-Correo		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Carpeta,				#isMetaSide : false			},			#name : #'eliminarEmail:',			#protocol : #initialization,			#sourceCode : 'eliminarEmail: unEmail\r\r^emails remove: unEmail.',			#stamp : 'Anonymous 10/12/2018 11:26',			#package : #Objetos1-Correo		}	}}