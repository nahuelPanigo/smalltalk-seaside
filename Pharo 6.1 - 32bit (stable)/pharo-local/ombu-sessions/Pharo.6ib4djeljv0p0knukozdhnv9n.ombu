OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:27:48.321899-03:00' ],		#prior : OmReference [ 'Pharo.2lkv6xy3lgrcc8dcl3if4emvo', '13' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UsuarioInmobiliario,				#isMetaSide : false			},			#name : #'eliminarReserva:',			#protocol : #initialization,			#sourceCode : 'eliminarReserva:unaReserva\rreservas remove: unaReserva .',			#stamp : 'Anonymous 11/9/2018 10:27',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:30:35.860899-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'eliminarReserva:',			#protocol : #accessing,			#sourceCode : 'eliminarReserva:unaReserva\rreservas remove: unaReserva.',			#stamp : 'Anonymous 11/9/2018 10:30',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:30:48.652899-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inmobiliaria,				#isMetaSide : false			},			#name : #'cancelarUnaReserva:',			#protocol : #initialization,			#sourceCode : 'cancelarUnaReserva: unaReserva\r(unaReserva usuario) eliminarReserva: unaReserva .\r(unaReserva propiedad) eliminarReserva: unaReserva .',			#stamp : 'Anonymous 11/9/2018 10:30',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:32:34.577899-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UsuarioInmobiliario,				#isMetaSide : false			},			#name : #reservas,			#protocol : #initialization,			#sourceCode : 'reservas\r^reservas .',			#stamp : 'Anonymous 11/9/2018 10:32',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:32:57.084899-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inmobiliaria,				#isMetaSide : false			},			#name : #'obtenerFacturasDe:',			#protocol : #initialization,			#sourceCode : 'obtenerFacturasDe: unCliente\r^ unCliente reservas.',			#stamp : 'Anonymous 11/9/2018 10:32',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:34:43.058899-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inmobiliaria,				#isMetaSide : false			},			#name : #'calcularIngresosDe:desde:hasta:',			#protocol : #initialization,			#sourceCode : 'calcularIngresosDe: unPropietario desde:unaFecha hasta:otraFecha\r',			#stamp : 'Anonymous 11/9/2018 10:34',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:47:49.339899-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'estaDentroDelRango:hasta:',			#protocol : #accessing,			#sourceCode : 'estaDentroDelRango:fecha1 hasta:fecha2\r\r^((fecha1 between:fechaEgreso and:fechaInicio) or:[fecha2  between:fechaEgreso  and:fechaInicio ]  ) ',			#stamp : 'Anonymous 11/9/2018 10:47',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:53:01.262899-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'calcularIngresosDesde:hasta:',			#protocol : #accessing,			#sourceCode : 'calcularIngresosDesde:unaFecha hasta:otraFecha\r|reservasAceptadas|\rreservasAceptadas := reservas select: [:reserva | (reserva reservadoDesde:unaFecha  hasta:otraFecha)  = true ].\r^reservasAceptadas sum: [:reserva | reserva calcularElPrecio ]. ',			#stamp : 'Anonymous 11/9/2018 10:53',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:53:43.527899-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inmobiliaria,				#isMetaSide : false			},			#name : #'calcularIngresosDe:desde:hasta:',			#protocol : #initialization,			#sourceCode : 'calcularIngresosDe: unPropietario desde:unaFecha hasta:otraFecha\r',			#stamp : 'Anonymous 11/9/2018 10:34',			#package : #Objetos-1-AlquilerDePropiedes		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inmobiliaria,				#isMetaSide : false			},			#name : #'calcularIngresosDe:desde:hasta:',			#protocol : #initialization,			#sourceCode : 'calcularIngresosDe: unPropietario desde: unaFecha hasta: otraFecha\r\tunPropietario ',			#stamp : 'Anonymous 11/9/2018 10:53',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T10:56:17.317899-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UsuarioInmobiliario,				#isMetaSide : false			},			#name : #'calcularPrecioDesde:hasta:',			#protocol : #initialization,			#sourceCode : 'calcularPrecioDesde:unaFecha hasta:otraFecha\r^ propiedades sum: [:propiedad | propiedad calcularIngresosDesde:unaFecha  hasta:otraFecha] .',			#stamp : 'Anonymous 11/9/2018 10:56',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:02:24.099899-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inmobiliaria,				#isMetaSide : false			},			#name : #'calcularIngresosDe:desde:hasta:',			#protocol : #initialization,			#sourceCode : 'calcularIngresosDe: unPropietario desde: unaFecha hasta: otraFecha\r\tunPropietario ',			#stamp : 'Anonymous 11/9/2018 10:53',			#package : #Objetos-1-AlquilerDePropiedes		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inmobiliaria,				#isMetaSide : false			},			#name : #'calcularIngresosDe:desde:hasta:',			#protocol : #initialization,			#sourceCode : 'calcularIngresosDe: unPropietario desde: unaFecha hasta: otraFecha\r\t^ unPropietario calcularPrecioDesde:unaFecha   hasta:otraFecha. \r',			#stamp : 'Anonymous 11/9/2018 11:02',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:06:14.719899-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaDeCancelacion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaDeCancelacion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaDeCancelacion class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaDeCancelacion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaDeCancelacion,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:06:20.606899-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaDeCancelacion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaDeCancelacion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaDeCancelacion class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaDeCancelacion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaDeCancelacion,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:09:45.751899-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PoliticaDeCancelacion,				#isMetaSide : false			},			#name : #calcularMetodoARembolsarDesde,			#protocol : #'as yet unclassified',			#sourceCode : 'calcularMetodoARembolsarDesde',			#stamp : 'Anonymous 11/9/2018 11:09',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:10:31.034899-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaFlexible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaFlexible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaFlexible class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaFlexible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaFlexible,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:10:35.361899-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaFlexible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaFlexible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaFlexible class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaFlexible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaFlexible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:11:14.209899-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaModerada\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaModerada,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaModerada class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaModerada class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaModerada,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:11:35.036899-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaEstricta\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaEstricta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaEstricta class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaEstricta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaEstricta,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:11:41.343899-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaEstricta\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaEstricta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaEstricta class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaEstricta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaEstricta,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:11:45.643899-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaModerada\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaModerada,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaModerada class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaModerada class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaModerada,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:11:57.290899-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaEstricta\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaEstricta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaEstricta class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaEstricta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaEstricta,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaEstricta\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaEstricta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaEstricta class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaEstricta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaEstricta,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:11:57.630899-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaEstricta\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaEstricta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaEstricta class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaEstricta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaEstricta,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'PoliticaDeCancelacion',				#traitCompositionSource : '{}',				#definitionSource : 'PoliticaDeCancelacion subclass: #PoliticaEstricta\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaEstricta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaEstricta class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaEstricta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaEstricta,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:12:15.894899-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaFlexible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaFlexible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaFlexible class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaFlexible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaFlexible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaFlexible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaFlexible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaFlexible class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaFlexible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaFlexible,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:12:16.252899-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaFlexible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaFlexible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaFlexible class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaFlexible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaFlexible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'PoliticaDeCancelacion',				#traitCompositionSource : '{}',				#definitionSource : 'PoliticaDeCancelacion subclass: #PoliticaFlexible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaFlexible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaFlexible class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaFlexible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaFlexible,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:12:27.787899-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaModerada\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaModerada,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaModerada class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaModerada class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaModerada,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaModerada\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaModerada,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaModerada class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaModerada class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaModerada,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:12:28.156899-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #PoliticaModerada\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaModerada,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaModerada class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaModerada class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaModerada,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'PoliticaDeCancelacion',				#traitCompositionSource : '{}',				#definitionSource : 'PoliticaDeCancelacion subclass: #PoliticaModerada\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #PoliticaModerada,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PoliticaModerada class\r\tinstanceVariableNames: \'\''				},				#name : #'PoliticaModerada class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PoliticaModerada,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:12:44.133899-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'fechaInicio fechaEgreso usuario propiedad\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaInicio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaEgreso,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #usuario,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #propiedad,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'fechaInicio fechaEgreso usuario propiedad politica\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaInicio,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaEgreso,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #usuario,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #propiedad,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #politica,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @29,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:13:08.887899-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'politica:',			#protocol : #accessing,			#sourceCode : 'politica: unaPolitica\rpolitica := unaPolitica .',			#stamp : 'Anonymous 11/9/2018 11:13',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:22:29.749899-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'fechaInicio fechaEgreso usuario propiedad politica\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaInicio,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaEgreso,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #usuario,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #propiedad,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #politica,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Reserva\r\tinstanceVariableNames: \'fechaInicio fechaEgreso usuario propiedad\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Reserva,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaInicio,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #fechaEgreso,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #usuario,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Reserva,						#isMetaSide : false					},					#name : #propiedad,					#parent : @31				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Reserva class\r\tinstanceVariableNames: \'\''				},				#name : #'Reserva class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @31			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Reserva,					#isMetaSide : false				},				#parent : @31,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:22:42.859899-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Reserva,				#isMetaSide : false			},			#name : #'politica:',			#protocol : #accessing,			#sourceCode : 'politica: unaPolitica\rpolitica := unaPolitica .',			#stamp : 'Anonymous 11/9/2018 11:13',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:23:02.388899-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Propiedades\r\tinstanceVariableNames: \'reservas nombre precioDia direccion descripcion\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Propiedades,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #reservas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #nombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #precioDia,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #direccion,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #descripcion,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Propiedades class\r\tinstanceVariableNames: \'\''				},				#name : #'Propiedades class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Propiedades,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tdireccion:\t\t<Object>\r\tnombre:\t\t<Object>\r\tprecioDia:\t\t<Object>\r\treservas:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Propiedades\r\tinstanceVariableNames: \'reservas nombre precioDia direccion descripcion politica\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-AlquilerDePropiedes\''			},			#name : #Propiedades,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #reservas,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #nombre,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #precioDia,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #direccion,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #descripcion,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Propiedades,						#isMetaSide : false					},					#name : #politica,					#parent : @31				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Propiedades class\r\tinstanceVariableNames: \'\''				},				#name : #'Propiedades class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @31			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Propiedades,					#isMetaSide : false				},				#parent : @31,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tdireccion:\t\t<Object>\r\tnombre:\t\t<Object>\r\tprecioDia:\t\t<Object>\r\treservas:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-AlquilerDePropiedes,			#package : #Objetos-1-AlquilerDePropiedes,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:23:47.142899-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Propiedades,				#isMetaSide : false			},			#name : #'politica:',			#protocol : #accessing,			#sourceCode : 'politica: unaPolitica\rpolitica := unaPolitica .',			#stamp : 'Anonymous 11/9/2018 11:23',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:25:01.961899-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UsuarioInmobiliario,				#isMetaSide : false			},			#name : #'calcularElMontoARembolsarDe:conCancelacion:',			#protocol : #initialization,			#sourceCode : 'calcularElMontoARembolsarDe:unaReserva conCancelacion:unaFecha.',			#stamp : 'Anonymous 11/9/2018 11:25',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:27:42.054899-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PoliticaDeCancelacion,				#isMetaSide : false			},			#name : #'calcularMetodoARembolsarDesde:deLaReserva:',			#protocol : #'as yet unclassified',			#sourceCode : 'calcularMetodoARembolsarDesde:unaFecha deLaReserva:unaReserva\r^ self subclassResponsibility .\r\t',			#stamp : 'Anonymous 11/9/2018 11:27',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:28:57.789899-03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PoliticaDeCancelacion,				#isMetaSide : false			},			#name : #calcularMetodoARembolsarDesde,			#protocol : #'as yet unclassified',			#sourceCode : 'calcularMetodoARembolsarDesde',			#stamp : 'Anonymous 11/9/2018 11:09',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:33:21.132899-03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PoliticaEstricta,				#isMetaSide : false			},			#name : #'calcularMetodoARembolsarDesde:deLaReserva:',			#protocol : #'as yet unclassified',			#sourceCode : 'calcularMetodoARembolsarDesde:unaFecha deLaReserva:unaReserva\r',			#stamp : 'Anonymous 11/9/2018 11:33',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:33:32.312899-03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PoliticaFlexible,				#isMetaSide : false			},			#name : #'calcularMetodoARembolsarDesde:deLaReserva:',			#protocol : #'as yet unclassified',			#sourceCode : 'calcularMetodoARembolsarDesde: unaFecha deLaReserva: unaReserva',			#stamp : 'Anonymous 11/9/2018 11:33',			#package : #Objetos-1-AlquilerDePropiedes		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-11-09T11:33:50.846899-03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PoliticaModerada,				#isMetaSide : false			},			#name : #'calcularMetodoARembolsarDesde:deLaReserva:',			#protocol : #'as yet unclassified',			#sourceCode : 'calcularMetodoARembolsarDesde: unaFecha deLaReserva: unaReserva',			#stamp : 'Anonymous 11/9/2018 11:33',			#package : #Objetos-1-AlquilerDePropiedes		}	}}