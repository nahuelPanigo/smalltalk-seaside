OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:44:21.848798-03:00' ],		#prior : OmReference [ 'Pharo.2tn7v7niwmgowxwbxtfvrr920', '101' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Objetos1-EstacionDeServicio,		#affectedPackageName : #Objetos1-EstacionDeServicio	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:44:22.041798-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #EstacionDeServicio\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #EstacionDeServicio,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'EstacionDeServicio class\r\tinstanceVariableNames: \'\''				},				#name : #'EstacionDeServicio class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #EstacionDeServicio,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:44:33.087798-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Surtidor\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Surtidor,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Surtidor class\r\tinstanceVariableNames: \'\''				},				#name : #'Surtidor class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Surtidor,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:44:37.034798-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #EstacionDeServicio\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #EstacionDeServicio,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'EstacionDeServicio class\r\tinstanceVariableNames: \'\''				},				#name : #'EstacionDeServicio class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #EstacionDeServicio,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:44:41.305798-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Surtidor\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Surtidor,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Surtidor class\r\tinstanceVariableNames: \'\''				},				#name : #'Surtidor class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Surtidor,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:44:55.583798-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:45:00.627798-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:45:13.885798-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Combustible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Combustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Combustible class\r\tinstanceVariableNames: \'\''				},				#name : #'Combustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Combustible,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:45:17.959798-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Combustible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Combustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Combustible class\r\tinstanceVariableNames: \'\''				},				#name : #'Combustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Combustible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:53:24.588798-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Combustible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Combustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Combustible class\r\tinstanceVariableNames: \'\''				},				#name : #'Combustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Combustible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Combustible\r\tinstanceVariableNames: \'nombre precioPorLitro\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Combustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Combustible,						#isMetaSide : false					},					#name : #nombre,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Combustible,						#isMetaSide : false					},					#name : #precioPorLitro,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Combustible class\r\tinstanceVariableNames: \'\''				},				#name : #'Combustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Combustible,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:53:40.431798-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Combustible,				#isMetaSide : false			},			#name : #precio,			#protocol : #'as yet unclassified',			#sourceCode : 'precio\r^precioPorLitro.',			#stamp : 'Anonymous 10/9/2018 11:53',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:53:55.070798-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Combustible,				#isMetaSide : false			},			#name : #nombre,			#protocol : #'as yet unclassified',			#sourceCode : 'nombre\r^nombre .',			#stamp : 'Anonymous 10/9/2018 11:53',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T11:53:55.076798-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Combustible,				#isMetaSide : false			},			#name : #nombre,			#protocol : #'as yet unclassified',			#sourceCode : 'nombre\r^nombre .',			#stamp : 'Anonymous 10/9/2018 11:53',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Combustible,				#isMetaSide : false			},			#name : #nombre,			#protocol : #accessing,			#sourceCode : 'nombre\r^nombre .',			#stamp : 'Anonymous 10/9/2018 11:53',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:02:18.440798-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Combustible class',				#isMetaSide : true			},			#name : #'combustible:conPrecio:',			#protocol : #'as yet unclassified',			#sourceCode : 'combustible:unNombre conPrecio: unPrecio\r\r^self new  ',			#stamp : 'Anonymous 10/9/2018 12:02',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:03:48.867798-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Combustible,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #accessing,			#sourceCode : 'nombre: unNombre\rnombre := unNombre .',			#stamp : 'Anonymous 10/9/2018 12:03',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:04:23.335798-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Combustible,				#isMetaSide : false			},			#name : #'precio:',			#protocol : #accessing,			#sourceCode : 'precio: unPrecio\rprecioPorLitro := unPrecio.',			#stamp : 'Anonymous 10/9/2018 12:04',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:06:41.107798-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Combustible class',				#isMetaSide : true			},			#name : #'combustible:conPrecio:',			#protocol : #'as yet unclassified',			#sourceCode : 'combustible:unNombre conPrecio: unPrecio\r\r^self new  ',			#stamp : 'Anonymous 10/9/2018 12:02',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Combustible class',				#isMetaSide : true			},			#name : #'combustible:conPrecio:',			#protocol : #'as yet unclassified',			#sourceCode : 'combustible:unNombre conPrecio: unPrecio\r\r^self new   nombre: unNombre; precio: unPrecio.',			#stamp : 'Anonymous 10/9/2018 12:06',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:06:58.898798-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'cantidadDeLitros fecha\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #cantidadDeLitros,						#parent : @26					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #fecha,						#parent : @26					}				],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:16:22.442798-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Surtidor\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Surtidor,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Surtidor class\r\tinstanceVariableNames: \'\''				},				#name : #'Surtidor class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Surtidor,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Surtidor\r\tinstanceVariableNames: \'despachos\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Surtidor,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Surtidor,						#isMetaSide : false					},					#name : #despachos,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Surtidor class\r\tinstanceVariableNames: \'\''				},				#name : #'Surtidor class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Surtidor,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:17:51.666798-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Surtidor class',				#isMetaSide : true			},			#name : #'cantidadDeCombustible:',			#protocol : #'as yet unclassified',			#sourceCode : 'cantidadDeCombustible:unaCantidad\r\r^self new ',			#stamp : 'Anonymous 10/9/2018 12:17',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:19:06.829798-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Surtidor\r\tinstanceVariableNames: \'despachos\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Surtidor,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Surtidor,						#isMetaSide : false					},					#name : #despachos,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Surtidor class\r\tinstanceVariableNames: \'\''				},				#name : #'Surtidor class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Surtidor,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Surtidor\r\tinstanceVariableNames: \'despachos cantidadDeCombustible\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Surtidor,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Surtidor,						#isMetaSide : false					},					#name : #despachos,					#parent : @23				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Surtidor,						#isMetaSide : false					},					#name : #cantidadDeCombustible,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Surtidor class\r\tinstanceVariableNames: \'\''				},				#name : #'Surtidor class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Surtidor,					#isMetaSide : false				},				#parent : @23,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:20:18.698798-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \rdespachos := OrderedCollection new. ',			#stamp : 'Anonymous 10/9/2018 12:20',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:20:18.937798-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \rdespachos := OrderedCollection new. ',			#stamp : 'Anonymous 10/9/2018 12:20',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \rdespachos := OrderedCollection new. ',			#stamp : 'Anonymous 10/9/2018 12:20',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:20:49.415798-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'cantidadCombustibleEnTanque:',			#protocol : #initialization,			#sourceCode : 'cantidadCombustibleEnTanque: unaCantidad\r\rcantidadDeCombustible := unaCantidad .',			#stamp : 'Anonymous 10/9/2018 12:20',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:21:25.995798-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #cantidadCombustibleEnTanque,			#protocol : #initialization,			#sourceCode : 'cantidadCombustibleEnTanque\r^cantidadDeCombustible ',			#stamp : 'Anonymous 10/9/2018 12:21',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:24:07.818798-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'recargarTanqueDeCombustible:',			#protocol : #initialization,			#sourceCode : 'recargarTanqueDeCombustible: cantidad\rcantidadDeCombustible :=cantidad\r',			#stamp : 'Anonymous 10/9/2018 12:24',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:25:59.413798-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Surtidor\r\tinstanceVariableNames: \'despachos cantidadDeCombustible\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Surtidor,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Surtidor,						#isMetaSide : false					},					#name : #despachos,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Surtidor,						#isMetaSide : false					},					#name : #cantidadDeCombustible,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Surtidor class\r\tinstanceVariableNames: \'\''				},				#name : #'Surtidor class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Surtidor,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Surtidor\r\tinstanceVariableNames: \'despachos cantidadDeCombustible combustible\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #Surtidor,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Surtidor,						#isMetaSide : false					},					#name : #despachos,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Surtidor,						#isMetaSide : false					},					#name : #cantidadDeCombustible,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Surtidor,						#isMetaSide : false					},					#name : #combustible,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Surtidor class\r\tinstanceVariableNames: \'\''				},				#name : #'Surtidor class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Surtidor,					#isMetaSide : false				},				#parent : @25,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:26:30.918798-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'combustible:',			#protocol : #initialization,			#sourceCode : 'combustible: unCombustible\rcombustible :=unCombustible .\r',			#stamp : 'Anonymous 10/9/2018 12:26',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:26:50.043798-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #combustible,			#protocol : #initialization,			#sourceCode : 'combustible\r^combustible .',			#stamp : 'Anonymous 10/9/2018 12:26',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:29:04.738798-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Surtidor class',				#isMetaSide : true			},			#name : #'elCombustible:conLosLitros:',			#protocol : #'as yet unclassified',			#sourceCode : 'elCombustible:unCombustible conLosLitros: unaCantidad\r\r^self new combustible:unCombustible;cantidadCombustibleEnTanque: unaCantidad. ',			#stamp : 'Anonymous 10/9/2018 12:29',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:29:10.066798-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Surtidor class',				#isMetaSide : true			},			#name : #'cantidadDeCombustible:',			#protocol : #'as yet unclassified',			#sourceCode : 'cantidadDeCombustible:unaCantidad\r\r^self new ',			#stamp : 'Anonymous 10/9/2018 12:17',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:32:56.825798-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'realizarDespachoPorLitros:',			#protocol : #initialization,			#sourceCode : 'realizarDespachoPorLitros:litros\r(cantidadDeCombustible>litros)ifTrue:\r[cantidadDeCombustible-litros]\r',			#stamp : 'Anonymous 10/9/2018 12:32',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:37:07.753798-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespacho:',			#protocol : #initialization,			#sourceCode : 'agregarDespacho:despacho\r\rdespachos add:despacho.\r',			#stamp : 'Anonymous 10/9/2018 12:37',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:37:34.525798-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'cantidadDeLitros fecha\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #cantidadDeLitros,						#parent : @12					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #fecha,						#parent : @12					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'cantidadDeLitros fecha\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #cantidadDeLitros,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #fecha,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'cantidadDeLitros fecha\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #cantidadDeLitros,						#parent : @34					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #fecha,						#parent : @34					}				],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @25,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:38:12.271798-03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DespachoDeCombustible,				#isMetaSide : false			},			#name : #'cantidadDeLitros:',			#protocol : #'as yet unclassified',			#sourceCode : 'cantidadDeLitros: unaCantidad\rcantidadDeLitros :=unaCantidad .',			#stamp : 'Anonymous 10/9/2018 12:38',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:38:12.527798-03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DespachoDeCombustible,				#isMetaSide : false			},			#name : #'cantidadDeLitros:',			#protocol : #'as yet unclassified',			#sourceCode : 'cantidadDeLitros: unaCantidad\rcantidadDeLitros :=unaCantidad .',			#stamp : 'Anonymous 10/9/2018 12:38',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DespachoDeCombustible,				#isMetaSide : false			},			#name : #'cantidadDeLitros:',			#protocol : #accessing,			#sourceCode : 'cantidadDeLitros: unaCantidad\rcantidadDeLitros :=unaCantidad .',			#stamp : 'Anonymous 10/9/2018 12:38',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:38:58.900798-03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DespachoDeCombustible,				#isMetaSide : false			},			#name : #cantidadDeLitros,			#protocol : #accessing,			#sourceCode : 'cantidadDeLitros\r^cantidadDeLitros .',			#stamp : 'Anonymous 10/9/2018 12:38',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:39:17.685798-03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DespachoDeCombustible,				#isMetaSide : false			},			#name : #'fecha:',			#protocol : #accessing,			#sourceCode : 'fecha: date\rfecha := date.',			#stamp : 'Anonymous 10/9/2018 12:39',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:39:28.581798-03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DespachoDeCombustible,				#isMetaSide : false			},			#name : #fecha,			#protocol : #accessing,			#sourceCode : 'fecha\r^fecha.',			#stamp : 'Anonymous 10/9/2018 12:39',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:41:02.427798-03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'CantidadDeLitros:',			#protocol : #'as yet unclassified',			#sourceCode : 'CantidadDeLitros:unaCantidad \r^self new cantidadDeLitros:unaCantidad;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 12:41',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:45:14.139798-03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros\r|despacho|\rdespacho cantidadDeLitros:unaCantidadDeLitros .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:45',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:45:59.440798-03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros\r|despacho|\rdespacho cantidadDeLitros:unaCantidadDeLitros .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:45',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros\r|despacho|\rdespacho CantidadDeLitros:unaCantidadDeLitros .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:45',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:46:59.796798-03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespacho:',			#protocol : #initialization,			#sourceCode : 'agregarDespacho:despacho\r\rdespachos add:despacho.\r',			#stamp : 'Anonymous 10/9/2018 12:37',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:52:11.565798-03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros\r|despacho|\rdespacho CantidadDeLitros:unaCantidadDeLitros .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:45',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros\r|despacho|\rdespacho := DespachoDeCombustible CantidadDeLitros:unaCantidadDeLitros .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:52',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:52:25.791798-03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'cantidadDeLitros:',			#protocol : #'as yet unclassified',			#sourceCode : 'cantidadDeLitros:unaCantidad \r^self new cantidadDeLitros:unaCantidad;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 12:52',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:52:25.801798-03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'cantidadDeLitros:',			#protocol : #'as yet unclassified',			#sourceCode : 'cantidadDeLitros:unaCantidad \r^self new cantidadDeLitros:unaCantidad;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 12:52',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'cantidadDeLitros:',			#protocol : #accessing,			#sourceCode : 'cantidadDeLitros:unaCantidad \r^self new cantidadDeLitros:unaCantidad;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 12:52',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:52:35.721798-03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros\r|despacho|\rdespacho := DespachoDeCombustible CantidadDeLitros:unaCantidadDeLitros .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:52',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros\r|despacho|\rdespacho := DespachoDeCombustible cantidadDeLitros:unaCantidadDeLitros .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:52',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:53:45.944798-03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'cantidadDeLitros fecha\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #cantidadDeLitros,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #fecha,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'cantidadDeLitros fecha\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #cantidadDeLitros,						#parent : @16					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #fecha,						#parent : @16					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'cantidadDeLitros fecha\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #cantidadDeLitros,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #fecha,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'cantidadDeLitros fecha combustible\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #cantidadDeLitros,						#parent : @38					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #fecha,						#parent : @38					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #combustible,						#parent : @38					}				],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @29,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:54:42.604798-03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'cantidadDeLitros fecha\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #cantidadDeLitros,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #fecha,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'cantidadDeLitros fecha combustible\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #cantidadDeLitros,						#parent : @16					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #fecha,						#parent : @16					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #combustible,						#parent : @16					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DespachoDeCombustible\r\tinstanceVariableNames: \'cantidadDeLitros fecha combustible\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #DespachoDeCombustible,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #cantidadDeLitros,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #fecha,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DespachoDeCombustible,						#isMetaSide : false					},					#name : #combustible,					#parent : @31				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DespachoDeCombustible class\r\tinstanceVariableNames: \'cantidadDeLitros fecha combustible\''				},				#name : #'DespachoDeCombustible class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #cantidadDeLitros,						#parent : @42					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #fecha,						#parent : @42					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'DespachoDeCombustible class',							#isMetaSide : true						},						#name : #combustible,						#parent : @42					}				],				#baseClass : @31			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DespachoDeCombustible,					#isMetaSide : false				},				#parent : @31,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:55:01.912798-03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DespachoDeCombustible,				#isMetaSide : false			},			#name : #'combustible:',			#protocol : #accessing,			#sourceCode : 'combustible: unCombustible\r\rcombustible:= unCombustible .',			#stamp : 'Anonymous 10/9/2018 12:55',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:55:14.917798-03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DespachoDeCombustible,				#isMetaSide : false			},			#name : #combustible,			#protocol : #accessing,			#sourceCode : 'combustible\r^ combustible .',			#stamp : 'Anonymous 10/9/2018 12:55',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:55:48.844798-03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'cantidadDeLitros:deCombustible:',			#protocol : #accessing,			#sourceCode : 'cantidadDeLitros:unaCantidad deCombustible: unCombustible\r^self new cantidadDeLitros:unaCantidad;combustible: unCombustible ;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 12:55',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:56:36.780798-03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'cantidadDeLitros:',			#protocol : #accessing,			#sourceCode : 'cantidadDeLitros:unaCantidad \r^self new cantidadDeLitros:unaCantidad;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 12:52',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:56:43.383798-03:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'CantidadDeLitros:',			#protocol : #'as yet unclassified',			#sourceCode : 'CantidadDeLitros:unaCantidad \r^self new cantidadDeLitros:unaCantidad;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 12:41',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:57:34.265798-03:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:yCombustible:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros yCombustible:unCombustible\r|despacho|\rdespacho := DespachoDeCombustible cantidadDeLitros:unaCantidadDeLitros deCombustible:unCombustible  .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:57',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T12:57:39.035798-03:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros\r|despacho|\rdespacho := DespachoDeCombustible cantidadDeLitros:unaCantidadDeLitros .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:52',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:02:17.198798-03:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'combustible:conPrecio:',			#protocol : #initialization,			#sourceCode : 'combustible:unNombre conPrecio:unPrecio\r|comb| \rcomb :=combustible combustible:unNombre conPrecio:unPrecio.\r\rcombustible := comb.',			#stamp : 'Anonymous 10/9/2018 13:02',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:02:24.564798-03:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'combustible:',			#protocol : #initialization,			#sourceCode : 'combustible: unCombustible\rcombustible :=unCombustible .\r',			#stamp : 'Anonymous 10/9/2018 12:26',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:04:11.845798-03:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #combustible,			#protocol : #initialization,			#sourceCode : 'combustible\r^combustible .',			#stamp : 'Anonymous 10/9/2018 12:26',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #combustible,			#protocol : #initialization,			#sourceCode : 'combustible\r\r^combustible .',			#stamp : 'Anonymous 10/9/2018 13:04',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:05:16.260798-03:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'cantidadDeLitros:deCombustible:ConPrecioPorLitro:',			#protocol : #accessing,			#sourceCode : 'cantidadDeLitros:unaCantidad deCombustible: unNombre ConPrecioPorLitro:unPrecio\r\r|comb|\rcomb := combustible combustible: unNombre conPrecio:unPrecio .\r\r^self new cantidadDeLitros:unaCantidad;combustible:comb ;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 13:05',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:06:43.012798-03:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'cantidadDeLitros:deCombustible:',			#protocol : #accessing,			#sourceCode : 'cantidadDeLitros:unaCantidad deCombustible: unCombustible\r^self new cantidadDeLitros:unaCantidad;combustible: unCombustible ;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 12:55',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:07:39.413798-03:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:yCombustible:yConPrecioPorLitro:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros yCombustible:unCombustible\ryConPrecioPorLitro:precioPorLitro\r|despacho|\rdespacho := DespachoDeCombustible cantidadDeLitros:unaCantidadDeLitros deCombustible:unCombustible ConPrecioPorLitro:precioPorLitro  .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 13:07',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:22:46.754798-03:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'cantidadDeLitros:deCombustible:',			#protocol : #accessing,			#sourceCode : 'cantidadDeLitros:unaCantidad deCombustible: unCombustible\r\r\r^self new cantidadDeLitros:unaCantidad;combustible:unCombustible ;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 13:22',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:22:56.510798-03:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'DespachoDeCombustible class',				#isMetaSide : true			},			#name : #'cantidadDeLitros:deCombustible:ConPrecioPorLitro:',			#protocol : #accessing,			#sourceCode : 'cantidadDeLitros:unaCantidad deCombustible: unNombre ConPrecioPorLitro:unPrecio\r\r|comb|\rcomb := combustible combustible: unNombre conPrecio:unPrecio .\r\r^self new cantidadDeLitros:unaCantidad;combustible:comb ;fecha: Date today.',			#stamp : 'Anonymous 10/9/2018 13:05',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:35:09.611798-03:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros \r|despacho|\rdespacho := DespachoDeCombustible cantidadDeLitros:unaCantidadDeLitros deCombustible:combustible.\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 13:35',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:35:18.752798-03:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:yCombustible:yConPrecioPorLitro:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros yCombustible:unCombustible\ryConPrecioPorLitro:precioPorLitro\r|despacho|\rdespacho := DespachoDeCombustible cantidadDeLitros:unaCantidadDeLitros deCombustible:unCombustible ConPrecioPorLitro:precioPorLitro  .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 13:07',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:35:28.232798-03:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'agregarDespachoConLitros:yCombustible:',			#protocol : #initialization,			#sourceCode : 'agregarDespachoConLitros: unaCantidadDeLitros yCombustible:unCombustible\r|despacho|\rdespacho := DespachoDeCombustible cantidadDeLitros:unaCantidadDeLitros deCombustible:unCombustible  .\r \rdespachos add: despacho.',			#stamp : 'Anonymous 10/9/2018 12:57',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:36:59.277798-03:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'realizarDespachoPorLitros:',			#protocol : #initialization,			#sourceCode : 'realizarDespachoPorLitros:litros\r(cantidadDeCombustible>litros)ifTrue:\r[cantidadDeCombustible-litros]\r',			#stamp : 'Anonymous 10/9/2018 12:32',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'realizarDespachoPorLitros:',			#protocol : #initialization,			#sourceCode : 'realizarDespachoPorLitros:litros\r(cantidadDeCombustible>litros)ifTrue:\r[cantidadDeCombustible-litros. self agregarDespachoConLitros:litros]\r',			#stamp : 'Anonymous 10/9/2018 13:36',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:39:44.667798-03:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'realizarDespachoPorLitros:',			#protocol : #initialization,			#sourceCode : 'realizarDespachoPorLitros:litros\r(cantidadDeCombustible>litros)ifTrue:\r[cantidadDeCombustible-litros. self agregarDespachoConLitros:litros]\r',			#stamp : 'Anonymous 10/9/2018 13:36',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'realizarDespachoPorLitros:',			#protocol : #initialization,			#sourceCode : 'realizarDespachoPorLitros:monto\r|l|\rl:=monto/ combustible precio.\r(cantidadDeCombustible>l)ifTrue:\r[cantidadDeCombustible-l. self agregarDespachoConLitros:l]\r',			#stamp : 'Anonymous 10/9/2018 13:39',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:40:14.531798-03:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'realizarDespachoPorMonto:',			#protocol : #initialization,			#sourceCode : 'realizarDespachoPorMonto:monto\r|l|\rl:=monto/ combustible precio.\r(cantidadDeCombustible>l)ifTrue:\r[cantidadDeCombustible-l. self agregarDespachoConLitros:l]\r',			#stamp : 'Anonymous 10/9/2018 13:40',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:40:54.017798-03:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'realizarDespachoPorLitros:',			#protocol : #initialization,			#sourceCode : 'realizarDespachoPorLitros:monto\r|l|\rl:=monto/ combustible precio.\r(cantidadDeCombustible>l)ifTrue:\r[cantidadDeCombustible-l. self agregarDespachoConLitros:l]\r',			#stamp : 'Anonymous 10/9/2018 13:39',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'realizarDespachoPorLitros:',			#protocol : #initialization,			#sourceCode : 'realizarDespachoPorLitros:litros\r(cantidadDeCombustible>litros)ifTrue:\r[cantidadDeCombustible-litros. self agregarDespachoConLitros:litros]\r',			#stamp : 'Anonymous 10/9/2018 13:40',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:41:58.198798-03:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'combustible:',			#protocol : #initialization,			#sourceCode : 'combustible: unCombustible\r\rcombustible := unCombustible.',			#stamp : 'Anonymous 10/9/2018 13:41',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:43:44.569798-03:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #'cantidadCombustibleEnTanque:',			#protocol : #initialization,			#sourceCode : 'cantidadCombustibleEnTanque: unaCantidad\r\rcantidadDeCombustible := unaCantidad .',			#stamp : 'Anonymous 10/9/2018 12:20',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T13:44:12.295798-03:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Surtidor class',				#isMetaSide : true			},			#name : #'elCombustible:conLosLitros:',			#protocol : #'as yet unclassified',			#sourceCode : 'elCombustible:unCombustible conLosLitros: unaCantidad\r\r^self new combustible:unCombustible;cantidadCombustibleEnTanque: unaCantidad. ',			#stamp : 'Anonymous 10/9/2018 12:29',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Surtidor class',				#isMetaSide : true			},			#name : #'elCombustible:conLosLitros:',			#protocol : #'as yet unclassified',			#sourceCode : 'elCombustible:unCombustible conLosLitros: unaCantidad\r\r^self new combustible:unCombustible;recargarTanqueDeCombustible:  unaCantidad. ',			#stamp : 'Anonymous 10/9/2018 13:44',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T14:00:12.345798-03:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #ventaDelDia,			#protocol : #initialization,			#sourceCode : 'ventaDelDia\r|f c|\rf:= Date today.\rc :=despachos select:[:despacho|f = despacho fecha].\r^ c sum:[:despacho| despacho fecha].',			#stamp : 'Anonymous 10/9/2018 14:00',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T14:04:17.129798-03:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #EstacionDeServicio\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #EstacionDeServicio,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'EstacionDeServicio class\r\tinstanceVariableNames: \'\''				},				#name : #'EstacionDeServicio class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #EstacionDeServicio,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #EstacionDeServicio\r\tinstanceVariableNames: \'surtidores\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos1-EstacionDeServicio\''			},			#name : #EstacionDeServicio,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #EstacionDeServicio,						#isMetaSide : false					},					#name : #surtidores,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'EstacionDeServicio class\r\tinstanceVariableNames: \'\''				},				#name : #'EstacionDeServicio class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #EstacionDeServicio,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos1-EstacionDeServicio,			#package : #Objetos1-EstacionDeServicio,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T14:04:41.715798-03:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EstacionDeServicio,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\rsurtidores := OrderedCollection new.',			#stamp : 'Anonymous 10/9/2018 14:04',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T14:04:41.958798-03:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EstacionDeServicio,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\rsurtidores := OrderedCollection new.',			#stamp : 'Anonymous 10/9/2018 14:04',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EstacionDeServicio,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\rsurtidores := OrderedCollection new.',			#stamp : 'Anonymous 10/9/2018 14:04',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T14:10:15.468798-03:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EstacionDeServicio,				#isMetaSide : false			},			#name : #'CantidadDisPonibleDeUnCombustible:',			#protocol : #initialization,			#sourceCode : 'CantidadDisPonibleDeUnCombustible: combustible\r\r|orCol|\rorCol:=surtidores select:[:surtidor | surtidor combustible = combustible  ].\rorCol sum:[:surtidor| surtidor cantidadCombustibleEnTanque ]. ',			#stamp : 'Anonymous 10/9/2018 14:10',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T14:10:24.603798-03:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EstacionDeServicio,				#isMetaSide : false			},			#name : #'CantidadDisPonibleDeUnCombustible:',			#protocol : #initialization,			#sourceCode : 'CantidadDisPonibleDeUnCombustible: combustible\r\r|orCol|\rorCol:=surtidores select:[:surtidor | surtidor combustible = combustible  ].\rorCol sum:[:surtidor| surtidor cantidadCombustibleEnTanque ]. ',			#stamp : 'Anonymous 10/9/2018 14:10',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EstacionDeServicio,				#isMetaSide : false			},			#name : #'CantidadDisPonibleDeUnCombustible:',			#protocol : #initialization,			#sourceCode : 'CantidadDisPonibleDeUnCombustible: combustible\r\r|orCol|\rorCol:=surtidores select:[:surtidor | surtidor combustible = combustible  ].\r^orCol sum:[:surtidor| surtidor cantidadCombustibleEnTanque ]. ',			#stamp : 'Anonymous 10/9/2018 14:10',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T14:12:11.820798-03:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EstacionDeServicio,				#isMetaSide : false			},			#name : #ventaTotalDelDia,			#protocol : #initialization,			#sourceCode : 'ventaTotalDelDia\r\r^surtidores sum:[:surtidor| surtidor ventaDelDia ].',			#stamp : 'Anonymous 10/9/2018 14:12',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T14:24:42.679798-03:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EstacionDeServicio,				#isMetaSide : false			},			#name : #'agregarsurtidor:',			#protocol : #initialization,			#sourceCode : 'agregarsurtidor: unSurtidor\r\r surtidores add:unSurtidor .',			#stamp : 'Anonymous 10/9/2018 14:24',			#package : #Objetos1-EstacionDeServicio		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-10-09T14:35:36.977798-03:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #ventaDelDia,			#protocol : #initialization,			#sourceCode : 'ventaDelDia\r|f c|\rf:= Date today.\rc :=despachos select:[:despacho|f = despacho fecha].\r^ c sum:[:despacho| despacho fecha].',			#stamp : 'Anonymous 10/9/2018 14:00',			#package : #Objetos1-EstacionDeServicio		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Surtidor,				#isMetaSide : false			},			#name : #ventaDelDia,			#protocol : #initialization,			#sourceCode : 'ventaDelDia\r|f colle litros|\rf:= Date today.\rcolle :=despachos select:[:despacho|f = despacho fecha].\rlitros:=colle sum:[:despacho| despacho cantidadDeLitros ].\r^ litros* (combustible precio) .',			#stamp : 'Anonymous 10/9/2018 14:35',			#package : #Objetos1-EstacionDeServicio		}	}}