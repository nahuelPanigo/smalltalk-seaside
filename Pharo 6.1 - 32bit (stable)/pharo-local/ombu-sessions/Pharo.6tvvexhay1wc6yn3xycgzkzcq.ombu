OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:06:07.581794-03:00' ],		#prior : OmReference [ 'Pharo.152wh39gqlypdyuvzvbl6ypg6', '2' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Objetos-1-Examen,		#affectedPackageName : #Objetos-1-Examen	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:06:07.738794-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SistemaElectricidad\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #SistemaElectricidad,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SistemaElectricidad class\r\tinstanceVariableNames: \'\''				},				#name : #'SistemaElectricidad class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SistemaElectricidad,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:06:16.829794-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SistemaElectricidad\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #SistemaElectricidad,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SistemaElectricidad class\r\tinstanceVariableNames: \'\''				},				#name : #'SistemaElectricidad class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SistemaElectricidad,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:06:44.181794-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Persona\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Persona,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Persona class\r\tinstanceVariableNames: \'\''				},				#name : #'Persona class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Persona,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:06:49.680794-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Persona\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Persona,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Persona class\r\tinstanceVariableNames: \'\''				},				#name : #'Persona class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Persona,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : '\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:06:54.049794-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Persona\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Persona,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Persona class\r\tinstanceVariableNames: \'\''				},				#name : #'Persona class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Persona,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#oldStamp : '<historical>',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:07:16.748794-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Cliente',				#traitCompositionSource : '{}',				#definitionSource : 'Cliente subclass: #PersonaJuridica\r\tinstanceVariableNames: \'cuit tipo\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-EmpresasInmobiliarias\''			},			#name : #PersonaJuridica,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PersonaJuridica,						#isMetaSide : false					},					#name : #cuit,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PersonaJuridica,						#isMetaSide : false					},					#name : #tipo,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaJuridica class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaJuridica class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaJuridica,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcuit:\t\t<Object>\r\ttipo:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-EmpresasInmobiliarias,			#package : #Objetos-1-EmpresasInmobiliarias,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Cliente',				#traitCompositionSource : '{}',				#definitionSource : 'Cliente subclass: #PersonaJuridica\r\tinstanceVariableNames: \'cuit tipo\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-EmpresasInmobiliarias\''			},			#name : #PersonaJuridica,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PersonaJuridica,						#isMetaSide : false					},					#name : #cuit,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PersonaJuridica,						#isMetaSide : false					},					#name : #tipo,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaJuridica class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaJuridica class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaJuridica,					#isMetaSide : false				},				#parent : @25,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcuit:\t\t<Object>\r\ttipo:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-EmpresasInmobiliarias,			#package : #Objetos-1-EmpresasInmobiliarias,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:07:17.012794-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Cliente',				#traitCompositionSource : '{}',				#definitionSource : 'Cliente subclass: #PersonaJuridica\r\tinstanceVariableNames: \'cuit tipo\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-EmpresasInmobiliarias\''			},			#name : #PersonaJuridica,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PersonaJuridica,						#isMetaSide : false					},					#name : #cuit,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PersonaJuridica,						#isMetaSide : false					},					#name : #tipo,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaJuridica class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaJuridica class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaJuridica,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcuit:\t\t<Object>\r\ttipo:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-EmpresasInmobiliarias,			#package : #Objetos-1-EmpresasInmobiliarias,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaJuridica\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-EmpresasInmobiliarias\''			},			#name : #PersonaJuridica,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaJuridica class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaJuridica class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaJuridica,					#isMetaSide : false				},				#parent : @25,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcuit:\t\t<Object>\r\ttipo:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-EmpresasInmobiliarias,			#package : #Objetos-1-EmpresasInmobiliarias,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:07:17.240794-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Objetos-1-EmpresasInmobiliarias,		#newCategory : 'Objetos-1-Examen',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaJuridica\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #PersonaJuridica,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaJuridica class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaJuridica class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaJuridica,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcuit:\t\t<Object>\r\ttipo:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:07:29.844794-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaResidente\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #PersonaResidente,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaResidente class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaResidente class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaResidente,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:07:33.880794-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaResidente\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #PersonaResidente,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaResidente class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaResidente class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaResidente,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:07:47.874794-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Medicion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Medicion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Medicion class\r\tinstanceVariableNames: \'\''				},				#name : #'Medicion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Medicion,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:07:57.867794-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Medicion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Medicion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Medicion class\r\tinstanceVariableNames: \'\''				},				#name : #'Medicion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Medicion,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:08:06.983794-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tarifario\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Tarifario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tarifario class\r\tinstanceVariableNames: \'\''				},				#name : #'Tarifario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tarifario,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:08:13.143794-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tarifario\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Tarifario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tarifario class\r\tinstanceVariableNames: \'\''				},				#name : #'Tarifario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tarifario,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : '\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:08:18.645794-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tarifario\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Tarifario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tarifario class\r\tinstanceVariableNames: \'\''				},				#name : #'Tarifario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tarifario,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#oldStamp : '<historical>',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:08:58.239794-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpRenameClassRefactoring {		#newName : #PersonaEmpresa,		#oldName : #PersonaJuridica	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ],		#time : DateAndTime [ '2018-12-11T01:08:58.289794-03:00' ],		#trigger : @3	},	#content : EpBehaviorNameChange {		#oldName : #PersonaJuridica,		#newName : #PersonaEmpresa,		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaEmpresa\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #PersonaEmpresa,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaEmpresa class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaEmpresa class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaEmpresa,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcuit:\t\t<Object>\r\ttipo:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ],		#time : DateAndTime [ '2018-12-11T01:09:00.475794-03:00' ],		#trigger : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EmpresaTelefonica,				#isMetaSide : false			},			#name : #'darDeAlataElClienteJuridico:conDireccion:conCuit:yTipo:',			#protocol : #initialization,			#sourceCode : 'darDeAlataElClienteJuridico:unCliente conDireccion:unaDireccion  conCuit:unCuit yTipo:unTipo\r|cliente|\rcliente := PersonaJuridica  elCliente:unCliente  conUnNumero:(self obtenerUnNumeroDisponible )  yUnaDireccion:unaDireccion  conCuit:unCuit  yTipo:unTipo .\rclientes add: cliente.\r^cliente.  ',			#stamp : 'Anonymous 11/15/2018 21:18',			#package : #Objetos-1-EmpresasInmobiliarias		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EmpresaTelefonica,				#isMetaSide : false			},			#name : #'darDeAlataElClienteJuridico:conDireccion:conCuit:yTipo:',			#protocol : #initialization,			#sourceCode : 'darDeAlataElClienteJuridico:unCliente conDireccion:unaDireccion  conCuit:unCuit yTipo:unTipo\r|cliente|\rcliente := PersonaEmpresa  elCliente:unCliente  conUnNumero:(self obtenerUnNumeroDisponible )  yUnaDireccion:unaDireccion  conCuit:unCuit  yTipo:unTipo .\rclientes add: cliente.\r^cliente.  ',			#stamp : 'Anonymous 12/11/2018 01:09',			#package : #Objetos-1-EmpresasInmobiliarias		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:09:25.723794-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpRenameClassRefactoring {		#newName : #PersonaJuridica,		#oldName : #PersonaEmpresa	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ],		#time : DateAndTime [ '2018-12-11T01:09:25.768794-03:00' ],		#trigger : @3	},	#content : EpBehaviorNameChange {		#oldName : #PersonaEmpresa,		#newName : #PersonaJuridica,		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaJuridica\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #PersonaJuridica,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaJuridica class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaJuridica class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaJuridica,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcuit:\t\t<Object>\r\ttipo:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ],		#time : DateAndTime [ '2018-12-11T01:09:27.931794-03:00' ],		#trigger : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EmpresaTelefonica,				#isMetaSide : false			},			#name : #'darDeAlataElClienteJuridico:conDireccion:conCuit:yTipo:',			#protocol : #initialization,			#sourceCode : 'darDeAlataElClienteJuridico:unCliente conDireccion:unaDireccion  conCuit:unCuit yTipo:unTipo\r|cliente|\rcliente := PersonaEmpresa  elCliente:unCliente  conUnNumero:(self obtenerUnNumeroDisponible )  yUnaDireccion:unaDireccion  conCuit:unCuit  yTipo:unTipo .\rclientes add: cliente.\r^cliente.  ',			#stamp : 'Anonymous 12/11/2018 01:09',			#package : #Objetos-1-EmpresasInmobiliarias		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EmpresaTelefonica,				#isMetaSide : false			},			#name : #'darDeAlataElClienteJuridico:conDireccion:conCuit:yTipo:',			#protocol : #initialization,			#sourceCode : 'darDeAlataElClienteJuridico:unCliente conDireccion:unaDireccion  conCuit:unCuit yTipo:unTipo\r|cliente|\rcliente := PersonaJuridica  elCliente:unCliente  conUnNumero:(self obtenerUnNumeroDisponible )  yUnaDireccion:unaDireccion  conCuit:unCuit  yTipo:unTipo .\rclientes add: cliente.\r^cliente.  ',			#stamp : 'Anonymous 12/11/2018 01:09',			#package : #Objetos-1-EmpresasInmobiliarias		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:09:35.557794-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#PersonaJuridica ))'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ],		#time : DateAndTime [ '2018-12-11T01:09:36.101794-03:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaJuridica\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'Objetos-1-Examen\''			},			#name : #PersonaJuridica,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaJuridica class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoletePersonaJuridica class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoletePersonaJuridica,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:09:46.864794-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaEmpresa\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #PersonaEmpresa,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaEmpresa class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaEmpresa class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaEmpresa,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:09:50.832794-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaEmpresa\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #PersonaEmpresa,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaEmpresa class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaEmpresa class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaEmpresa,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:10:14.016794-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Persona\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Persona,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Persona class\r\tinstanceVariableNames: \'\''				},				#name : #'Persona class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Persona,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Persona\r\tinstanceVariableNames: \'nombre direccion\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Persona,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Persona,						#isMetaSide : false					},					#name : #nombre,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Persona,						#isMetaSide : false					},					#name : #direccion,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Persona class\r\tinstanceVariableNames: \'\''				},				#name : #'Persona class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Persona,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:10:27.050794-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\rnombre := unNombre.',			#stamp : 'Anonymous 12/11/2018 01:10',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:10:27.257794-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'nombre: unNombre\rnombre := unNombre.',			#stamp : 'Anonymous 12/11/2018 01:10',			#package : #Objetos-1-Examen		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #accessing,			#sourceCode : 'nombre: unNombre\rnombre := unNombre.',			#stamp : 'Anonymous 12/11/2018 01:10',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:10:33.028794-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #nombre,			#protocol : #accessing,			#sourceCode : 'nombre\r^nombre',			#stamp : 'Anonymous 12/11/2018 01:10',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:10:51.869794-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #'direccion:',			#protocol : #accessing,			#sourceCode : 'direccion: unaDireccion\rdireccion := unaDireccion .',			#stamp : 'Anonymous 12/11/2018 01:10',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:10:59.035794-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #direccion,			#protocol : #accessing,			#sourceCode : 'direccion \r^direccion.',			#stamp : 'Anonymous 12/11/2018 01:10',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:14:48.181794-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaResidente\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #PersonaResidente,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaResidente class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaResidente class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaResidente,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Persona',				#traitCompositionSource : '{}',				#definitionSource : 'Persona subclass: #PersonaResidente\r\tinstanceVariableNames: \'apellido\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #PersonaResidente,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PersonaResidente,						#isMetaSide : false					},					#name : #apellido,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PersonaResidente class\r\tinstanceVariableNames: \'\''				},				#name : #'PersonaResidente class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PersonaResidente,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:15:16.595794-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PersonaResidente,				#isMetaSide : false			},			#name : #'apellido:',			#protocol : #'as yet unclassified',			#sourceCode : 'apellido: unApellido\rapellido := unApellido.',			#stamp : 'Anonymous 12/11/2018 01:15',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:15:16.797794-03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PersonaResidente,				#isMetaSide : false			},			#name : #'apellido:',			#protocol : #'as yet unclassified',			#sourceCode : 'apellido: unApellido\rapellido := unApellido.',			#stamp : 'Anonymous 12/11/2018 01:15',			#package : #Objetos-1-Examen		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PersonaResidente,				#isMetaSide : false			},			#name : #'apellido:',			#protocol : #accessing,			#sourceCode : 'apellido: unApellido\rapellido := unApellido.',			#stamp : 'Anonymous 12/11/2018 01:15',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:15:29.377794-03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PersonaResidente,				#isMetaSide : false			},			#name : #apellido,			#protocol : #accessing,			#sourceCode : 'apellido\r^apellido\r',			#stamp : 'Anonymous 12/11/2018 01:15',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:16:23.729794-03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tarifario\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Tarifario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tarifario class\r\tinstanceVariableNames: \'\''				},				#name : #'Tarifario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tarifario,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tarifario\r\tinstanceVariableNames: \'persona empresa\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Tarifario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tarifario,						#isMetaSide : false					},					#name : #persona,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tarifario,						#isMetaSide : false					},					#name : #empresa,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tarifario class\r\tinstanceVariableNames: \'\''				},				#name : #'Tarifario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tarifario,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:16:39.033794-03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tarifario\r\tinstanceVariableNames: \'persona empresa\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Tarifario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tarifario,						#isMetaSide : false					},					#name : #persona,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tarifario,						#isMetaSide : false					},					#name : #empresa,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tarifario class\r\tinstanceVariableNames: \'\''				},				#name : #'Tarifario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tarifario,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tarifario\r\tinstanceVariableNames: \'precioPersona precioEmpresa\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Tarifario,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tarifario,						#isMetaSide : false					},					#name : #precioPersona,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tarifario,						#isMetaSide : false					},					#name : #precioEmpresa,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tarifario class\r\tinstanceVariableNames: \'\''				},				#name : #'Tarifario class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tarifario,					#isMetaSide : false				},				#parent : @25,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:16:57.032794-03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tarifario,				#isMetaSide : false			},			#name : #'precioPersona:',			#protocol : #'as yet unclassified',			#sourceCode : 'precioPersona: unPrecio\rprecioPersona  := unPrecio .',			#stamp : 'Anonymous 12/11/2018 01:16',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:16:57.244794-03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tarifario,				#isMetaSide : false			},			#name : #'precioPersona:',			#protocol : #'as yet unclassified',			#sourceCode : 'precioPersona: unPrecio\rprecioPersona  := unPrecio .',			#stamp : 'Anonymous 12/11/2018 01:16',			#package : #Objetos-1-Examen		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tarifario,				#isMetaSide : false			},			#name : #'precioPersona:',			#protocol : #accessing,			#sourceCode : 'precioPersona: unPrecio\rprecioPersona  := unPrecio .',			#stamp : 'Anonymous 12/11/2018 01:16',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:17:09.607794-03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tarifario,				#isMetaSide : false			},			#name : #precioPersona,			#protocol : #accessing,			#sourceCode : 'precioPersona\r^precioPersona ',			#stamp : 'Anonymous 12/11/2018 01:17',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:17:24.266794-03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tarifario,				#isMetaSide : false			},			#name : #'precioEmpresa:',			#protocol : #accessing,			#sourceCode : 'precioEmpresa: unPrecio\rprecioEmpresa := unPrecio .',			#stamp : 'Anonymous 12/11/2018 01:17',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:17:33.012794-03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tarifario,				#isMetaSide : false			},			#name : #precioEmpresa,			#protocol : #accessing,			#sourceCode : 'precioEmpresa\r^precioEmpresa .',			#stamp : 'Anonymous 12/11/2018 01:17',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:19:24.186794-03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SistemaElectricidad\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #SistemaElectricidad,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SistemaElectricidad class\r\tinstanceVariableNames: \'\''				},				#name : #'SistemaElectricidad class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SistemaElectricidad,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SistemaElectricidad\r\tinstanceVariableNames: \'tarifario clientes\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #SistemaElectricidad,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SistemaElectricidad,						#isMetaSide : false					},					#name : #tarifario,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SistemaElectricidad,						#isMetaSide : false					},					#name : #clientes,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SistemaElectricidad class\r\tinstanceVariableNames: \'\''				},				#name : #'SistemaElectricidad class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SistemaElectricidad,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:19:50.762794-03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SistemaElectricidad,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \rtarifario := Tarifario new.\rclientes := OrderedCollection new.',			#stamp : 'Anonymous 12/11/2018 01:19',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:19:50.950794-03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SistemaElectricidad,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \rtarifario := Tarifario new.\rclientes := OrderedCollection new.',			#stamp : 'Anonymous 12/11/2018 01:19',			#package : #Objetos-1-Examen		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SistemaElectricidad,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \rtarifario := Tarifario new.\rclientes := OrderedCollection new.',			#stamp : 'Anonymous 12/11/2018 01:19',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:22:32.475794-03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tarifario,				#isMetaSide : false			},			#name : #'actualizarTarifaEmpresa:YPersona:',			#protocol : #accessing,			#sourceCode : 'actualizarTarifaEmpresa:unPrecio YPersona:otroPrecio\rself precioEmpresa:unPrecio .\rself precioPersona: otroPrecio .',			#stamp : 'Anonymous 12/11/2018 01:22',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:23:34.007794-03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SistemaElectricidad,				#isMetaSide : false			},			#name : #'actualizarTarifaResidente:yParaEmpresas:',			#protocol : #initialization,			#sourceCode : 'actualizarTarifaResidente:unPrecio yParaEmpresas:otroPrecio\rtarifario actualizarTarifaEmpresa:otroPrecio  YPersona:unPrecio . ',			#stamp : 'Anonymous 12/11/2018 01:23',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:26:06.628794-03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Persona class',				#isMetaSide : true			},			#name : #'conDireccion:yNombre:',			#protocol : #'as yet unclassified',			#sourceCode : 'conDireccion:unaDireccion yNombre: unNombre\r^self new direccion:unaDireccion ;nombre:unNombre .',			#stamp : 'Anonymous 12/11/2018 01:26',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:27:17.004794-03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PersonaResidente class',				#isMetaSide : true			},			#name : #'conDireccion:yNombre:yApellido:',			#protocol : #'as yet unclassified',			#sourceCode : 'conDireccion:unaDireccion yNombre:unNombre yApellido:unApellido\r^(self conDireccion:unaDireccion  yNombre:unNombre ) apellido:unApellido .',			#stamp : 'Anonymous 12/11/2018 01:27',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:30:21.207794-03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SistemaElectricidad,				#isMetaSide : false			},			#name : #'registrarLaPersona:conDireccion:yApellido:',			#protocol : #initialization,			#sourceCode : 'registrarLaPersona:unNombre conDireccion:unaDireccion yApellido:unApellido\r|persona|\rpersona := PersonaResidente conDireccion:unaDireccion  yNombre:unNombre  yApellido:unApellido.\rclientes add: persona.\r^persona. ',			#stamp : 'Anonymous 12/11/2018 01:30',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:31:07.378794-03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SistemaElectricidad,				#isMetaSide : false			},			#name : #'registrarLaEmpresa:conDireccion:',			#protocol : #initialization,			#sourceCode : 'registrarLaEmpresa:unNombre conDireccion:unaDireccion\r|persona|\rpersona := PersonaEmpresa conDireccion:unaDireccion  yNombre:unNombre .\rclientes add: persona.\r^persona.',			#stamp : 'Anonymous 12/11/2018 01:31',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:32:48.955794-03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Medicion\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Medicion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Medicion class\r\tinstanceVariableNames: \'\''				},				#name : #'Medicion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Medicion,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Medicion\r\tinstanceVariableNames: \'mes anio energiaConsumida\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Medicion,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Medicion,						#isMetaSide : false					},					#name : #mes,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Medicion,						#isMetaSide : false					},					#name : #anio,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Medicion,						#isMetaSide : false					},					#name : #energiaConsumida,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Medicion class\r\tinstanceVariableNames: \'\''				},				#name : #'Medicion class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Medicion,					#isMetaSide : false				},				#parent : @21,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:33:04.092794-03:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Medicion,				#isMetaSide : false			},			#name : #'mes:',			#protocol : #'as yet unclassified',			#sourceCode : 'mes: unMes\rmes := unMes .',			#stamp : 'Anonymous 12/11/2018 01:33',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:33:04.305794-03:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Medicion,				#isMetaSide : false			},			#name : #'mes:',			#protocol : #'as yet unclassified',			#sourceCode : 'mes: unMes\rmes := unMes .',			#stamp : 'Anonymous 12/11/2018 01:33',			#package : #Objetos-1-Examen		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Medicion,				#isMetaSide : false			},			#name : #'mes:',			#protocol : #accessing,			#sourceCode : 'mes: unMes\rmes := unMes .',			#stamp : 'Anonymous 12/11/2018 01:33',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:33:11.397794-03:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Medicion,				#isMetaSide : false			},			#name : #mes,			#protocol : #accessing,			#sourceCode : 'mes\r^mes.',			#stamp : 'Anonymous 12/11/2018 01:33',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:33:25.334794-03:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Medicion,				#isMetaSide : false			},			#name : #'anio:',			#protocol : #accessing,			#sourceCode : 'anio: unAnio\ranio := unAnio .',			#stamp : 'Anonymous 12/11/2018 01:33',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:33:31.895794-03:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Medicion,				#isMetaSide : false			},			#name : #anio,			#protocol : #accessing,			#sourceCode : 'anio \r^anio.',			#stamp : 'Anonymous 12/11/2018 01:33',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:34:00.406794-03:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Medicion,				#isMetaSide : false			},			#name : #'energiaConsumida:',			#protocol : #accessing,			#sourceCode : 'energiaConsumida: unaEnergia\renergiaConsumida := unaEnergia.',			#stamp : 'Anonymous 12/11/2018 01:34',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:34:15.193794-03:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Medicion,				#isMetaSide : false			},			#name : #energiaConsumida,			#protocol : #accessing,			#sourceCode : 'energiaConsumida\r^energiaConsumida .',			#stamp : 'Anonymous 12/11/2018 01:34',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:36:09.220794-03:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SistemaElectricidad,				#isMetaSide : false			},			#name : #'registrarConsumoDe:por:DelMes:yElAnio:',			#protocol : #initialization,			#sourceCode : 'registrarConsumoDe:unaPersona por:unaCantidad DelMes:unMes yElAnio:unAnio\runaPersona .',			#stamp : 'Anonymous 12/11/2018 01:36',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:36:20.616794-03:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Persona\r\tinstanceVariableNames: \'nombre direccion\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Persona,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Persona,						#isMetaSide : false					},					#name : #nombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Persona,						#isMetaSide : false					},					#name : #direccion,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Persona class\r\tinstanceVariableNames: \'\''				},				#name : #'Persona class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Persona,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Persona\r\tinstanceVariableNames: \'nombre direccion mediciones\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Objetos-1-Examen\''			},			#name : #Persona,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Persona,						#isMetaSide : false					},					#name : #nombre,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Persona,						#isMetaSide : false					},					#name : #direccion,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Persona,						#isMetaSide : false					},					#name : #mediciones,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Persona class\r\tinstanceVariableNames: \'\''				},				#name : #'Persona class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Persona,					#isMetaSide : false				},				#parent : @25,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Objetos-1-Examen,			#package : #Objetos-1-Examen,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:36:48.201794-03:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #initialize,			#protocol : #accessing,			#sourceCode : 'initialize\rmediciones := OrderedCollection new.',			#stamp : 'Anonymous 12/11/2018 01:36',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:39:24.640794-03:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Medicion class',				#isMetaSide : true			},			#name : #'conConsumo:delMes:yDelAnio:',			#protocol : #'as yet unclassified',			#sourceCode : 'conConsumo:unaCantidad delMes:unMes yDelAnio:unAnio\r^ self new energiaConsumida:unaCantidad;mes: unMes;anio:unAnio. ',			#stamp : 'Anonymous 12/11/2018 01:39',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:40:22.843794-03:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #'RegistrarUnaMedicion:delAnio:yDelMes:',			#protocol : #accessing,			#sourceCode : 'RegistrarUnaMedicion:unaCantidad delAnio:unAnio yDelMes:unMes\r|medicion|\rmedicion := Medicion conConsumo:unaCantidad  delMes:unMes  yDelAnio:unAnio.  ',			#stamp : 'Anonymous 12/11/2018 01:40',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:40:39.047794-03:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #'RegistrarUnaMedicion:delAnio:yDelMes:',			#protocol : #accessing,			#sourceCode : 'RegistrarUnaMedicion:unaCantidad delAnio:unAnio yDelMes:unMes\r|medicion|\rmedicion := Medicion conConsumo:unaCantidad  delMes:unMes  yDelAnio:unAnio.  ',			#stamp : 'Anonymous 12/11/2018 01:40',			#package : #Objetos-1-Examen		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #'RegistrarUnaMedicion:delAnio:yDelMes:',			#protocol : #accessing,			#sourceCode : 'RegistrarUnaMedicion:unaCantidad delAnio:unAnio yDelMes:unMes\r|medicion|\rmedicion := Medicion conConsumo:unaCantidad  delMes:unMes  yDelAnio:unAnio.\rmediciones add: medicion.  ',			#stamp : 'Anonymous 12/11/2018 01:40',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:42:12.280794-03:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #'registrarUnaMedicion:delAnio:yDelMes:',			#protocol : #accessing,			#sourceCode : 'registrarUnaMedicion:unaCantidad delAnio:unAnio yDelMes:unMes\r|medicion|\rmedicion := Medicion conConsumo:unaCantidad  delMes:unMes  yDelAnio:unAnio.\rmediciones add: medicion.  ',			#stamp : 'Anonymous 12/11/2018 01:42',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:42:18.168794-03:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Persona,				#isMetaSide : false			},			#name : #'RegistrarUnaMedicion:delAnio:yDelMes:',			#protocol : #accessing,			#sourceCode : 'RegistrarUnaMedicion:unaCantidad delAnio:unAnio yDelMes:unMes\r|medicion|\rmedicion := Medicion conConsumo:unaCantidad  delMes:unMes  yDelAnio:unAnio.\rmediciones add: medicion.  ',			#stamp : 'Anonymous 12/11/2018 01:40',			#package : #Objetos-1-Examen		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-12-11T01:42:40.724794-03:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SistemaElectricidad,				#isMetaSide : false			},			#name : #'registrarConsumoDe:por:DelMes:yElAnio:',			#protocol : #initialization,			#sourceCode : 'registrarConsumoDe:unaPersona por:unaCantidad DelMes:unMes yElAnio:unAnio\runaPersona .',			#stamp : 'Anonymous 12/11/2018 01:36',			#package : #Objetos-1-Examen		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SistemaElectricidad,				#isMetaSide : false			},			#name : #'registrarConsumoDe:por:DelMes:yElAnio:',			#protocol : #initialization,			#sourceCode : 'registrarConsumoDe:unaPersona por:unaCantidad DelMes:unMes yElAnio:unAnio\runaPersona registrarUnaMedicion:unaCantidad  delAnio:unAnio  yDelMes:unMes. ',			#stamp : 'Anonymous 12/11/2018 01:42',			#package : #Objetos-1-Examen		}	}}